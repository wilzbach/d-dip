{| class="wikitable"
!Title:
!'''DIP64 Attribute Cleanup'''
|-
|DIP:
|64
|-
|Version:
|1
|-
|Status:
|Draft
|-
|Created:
|2014-06-20
|-
|Last Modified:
|2014-06-20
|-
|Author:
|Brian Schott
|-
|Links:
| [http://forum.dlang.org/post/hfmulninvghjntqkpguk@forum.dlang.org Newsgroup Discussion]
|}

== Abstract ==
The number of annotations in the D language continues to grow. Adding all of the
correct annotations to declarations can cause these declarations to become very
verbose.

There is some inconsistency between the syntax of various attributes because of
historical reasons. For example, "pure" and "@nogc" are inconsistent because one
of them uses the @identifier syntax and the other does not, yet they are both
compiler-defined attributes.

This DIP intends to fix these issues in two ways:
# The definition of attribute sets, which allow users to combine multiple annotations into a single annotation and
# The deprecation of the old-style attributes that do not use the @-syntax. A tool will be created that can easily update code to use the new attributes. (e.g. by translating "nothrow" to "@nothrow")

== Atribute Sets ==
First, an example. The following code using attribute sets:
<syntaxhighlight lang="D">
@spiffy = @pure @nothrow @safe;

float mul(float a, float b) @spiffy
{
    return a * b;
}
</syntaxhighlight>
is semantically equivalent to the following code that does not:
<syntaxhighlight lang="D">
float mul(float a, float b) @pure @nothrow @safe
{
    return a * b;
}
</syntaxhighlight>

Arguments to attribute sets will be passed on to the attributes that compose the
set. For example:
<syntaxhighlight lang="D">
@special(name) = @serializable(name) @entity(name);
@special("abc")
struct SpecialStruct { int a; }
</syntaxhighlight>
is the same as
<syntaxhighlight lang="D">
@serializable("abc") @entity("abc")
struct SpecialStruct { int a; }
</syntaxhighlight>

=== Grammar Changes ===

A new rule called AttributeSetDeclaration will be added to the Declaration rule:
<pre>
Declaration:
	...
	AttributeSetDeclaration
	...
</pre>

AttributeSetDeclaration will be defined as follows:
<pre>
AttributeSetDeclaration:
    Property '=' Property+ ';'
</pre>

== Attribute Consistency ==
Keywords that are only attributes (i.e. they are not also storage classes or
type constructors) will be deprecated. The compiler front-ends will need to be
modified to recognize the new @-versions of the attributes as equivalent to their
old non-@-versions (e.g. "@pure" is equivalent to "pure").

To aid in this transition a tool will be constructed on top of the lexer
contained in the D-Scanner project. Because this is only a keyword substitution
the chances of this tool failing are incredibly low. All whitespace, comments,
and other formatting will be preserved by this tool.

== Copyright ==
This document has been placed in the Public Domain.

[[Category: DIP]]